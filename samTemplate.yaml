AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: HomexCloud Demo API

Globals:
  Function:
    Runtime: nodejs8.10
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Parameters:
  DomainName:
    Type: String
    Default: api.homexcloud.com
  HostedZoneName:
    Type: String
    Default: homexcloud.com
  StageName:
    Type: String
    Default: dev
    Description: The Lambda Function and API Gateway Stage
  FunctionName:
    Type: String
    Default: getLocation
    Description: The Lambda Function Name

Resources:
  HomexCloudDemoAPI:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: nodejs8.10
      CodeUri: ./LambdaCode
      Description: 'Lambda function for CD Demo'
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          STAGE: !Ref StageName
          REGION: us-west-2
      Events:
        locationAPIRequest:
          Type: Api
          Properties:
            Path: /location
            Method: post
            RestApiId:
              Ref: locationAPI

  BasePathMapping:
    DependsOn: HomexCloudDemoAPI
    Type: 'AWS::ApiGateway::BasePathMapping'
    Properties:
      BasePath: 'demo'
      DomainName: 'api.homexcloud.com'
      RestApiId:
        Ref: locationAPI
      Stage:
        Ref: locationAPIStage

  locationAPI:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: !Ref StageName
      DefinitionBody:
        swagger: "2.0"
        info:
          title: !Sub HomexCloud-${FunctionName}
        paths:
          /location:
            post:
              consumes: ["application/json"]
              produces: ["application/json"]
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                requestParameters:
                  integration.request.header.Content-Type: "'x-amz-json-1.1'"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HomexCloudDemoAPI.Arn}/invocations"
                passthroughBehavior: "when_no_templates"
                httpMethod: "POST"
                type: "aws"
            options:
              consumes: ["application/json"]
              produces: ["application/json"]
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                type: "mock"
        definitions:
          Empty:
            type: "object"
            title: "Empty Schema"